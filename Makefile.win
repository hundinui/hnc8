PROGNAME := hnc8
BINDIR := bin
OBJDIR := obj

CC ?= gcc

VERSION_STR := \"1.0-windows\"

LDFLAGS := -flto -lopengl32 -lws2_32 -lglfw3 -lgdi32
CFLAGS := -std=c99 -DHNC8_VERSION=$(VERSION_STR)
CFLAGS_RELEASE := -Wall -Wpedantic -Werror -Wuninitialized -O2 -DNDEBUG
CFLAGS_DEBUG := -ggdb -g3 -O0 -DDEBUG

SRCS := $(wildcard *.c)
OBJS := $(patsubst %.c, $(OBJDIR)/%.o, $(SRCS))

TEST_SRC := chip8.c chip8_ops.c $(wildcard tests/*.c)
TEST_OBJ := $(patsubst %.c, $(OBJDIR)/%.o, $(TEST_SRC))

.PHONY: release
release: CFLAGS += $(CFLAGS_RELEASE)
release: $(BINDIR)/$(PROGNAME)

.PHONY: debug
debug: CFLAGS += $(CFLAGS_DEBUG)
debug: $(BINDIR)/$(PROGNAME)

.PHONY: tests
tests: CFLAGS += $(CFLAGS_DEBUG)
tests: $(BINDIR)/$(PROGNAME)_test

$(OBJDIR)/%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

$(BINDIR)/$(PROGNAME): $(OBJDIR) $(BINDIR) $(OBJS)
	$(CC) -o $(BINDIR)/$(PROGNAME) $(OBJS) $(LDFLAGS)

$(BINDIR)/$(PROGNAME)_test: $(OBJDIR) $(OBJDIR)/tests $(BINDIR) $(TEST_OBJ)
	$(CC) -o $(BINDIR)/$(PROGNAME)_test $(TEST_OBJ) $(LDFLAGS)

$(OBJDIR)/tests:
	mkdir -p $(OBJDIR)/tests

$(OBJDIR):
	mkdir -p $(OBJDIR)

$(BINDIR):
	mkdir -p $(BINDIR)

.PHONY: clean
clean:
	rm -fv $(OBJDIR)/*.o $(BINDIR)/$(PROGNAME) $(BINDIR)/$(PROGNAME)_test
